generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [uuid_ossp(map: "uuid-ossp")]
}

model comments {
  comment_id String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  content    String
  user_id    String?   @db.Uuid
  video_id   String?   @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users?    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  videos     videos?   @relation(fields: [video_id], references: [video_id], onDelete: Cascade, onUpdate: NoAction)
}

model likes {
  like_id    String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String?   @db.Uuid
  video_id   String?   @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users?    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  videos     videos?   @relation(fields: [video_id], references: [video_id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  user_id       String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name          String     @db.VarChar(50)
  last_name     String     @db.VarChar(50)
  username      String     @unique @db.VarChar(50)
  password_hash String     @db.VarChar(255)
  email         String     @unique @db.VarChar(100)
  comments      comments[]
  likes         likes[]
  videos        videos[]
}

model videos {
  video_id     String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title        String     @db.VarChar(100)
  description  String?
  credits      String?    @db.VarChar(100)
  publish_date DateTime?  @default(now()) @db.Timestamp(6)
  is_public    Boolean?   @default(true)
  user_id      String?    @db.Uuid
  comments     comments[]
  likes        likes[]
  users        users?     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
}
